input {
    file {
    type => "java"
    path => ["/path/to/logs/*/20*/**/*.log"]
    exclude => ["*logstash*.log", "*ws-client*.log"]
    start_position => "end"
    sincedb_path => "/path/to/logstash/sincedb"
    sincedb_clean_after => "1 week"
    max_open_files => 46000
    close_older => "1 hour"
    codec => multiline {
      pattern => "^%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME}.*"
      negate => "true"
      what => "previous"
    }
  }
}

# Filter configurations

filter {

  if [message] =~ "\tat" {
    grok {
      match => ["message", "^(\tat)"]
      add_tag => ["stacktrace"]
    }
  }

  grok {
    match => ["path","/path/to/logs/(?<component>[A-Za-z0-9-]+)/%{GREEDYDATA}/%{GREEDYDATA:filename}\.log"]
  }

  #Grokking Spring Boot's default log format
  grok {
        match => [ "message",
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s+%{LOGLEVEL:level}\s+%{NUMBER:pid}\s+---\s+\[%{DATA:thread}\]\s+%{DATA:class}\s+:\s+%{GREEDYDATA:logmessage}",
               "message",
               "(?<timestamp>%{YEAR}-%{MONTHNUM}-%{MONTHDAY} %{TIME})\s+%{LOGLEVEL:level}\s+\[%{DATA:service},%{DATA:trace},%{DATA:span},%{DATA:exportable}\]\s+%{DATA:pid}\s+---\s+\[%{DATA:thread}\]\s+%{DATA:class}\s+:\s+%{GREEDYDATA:logmessage}" ]
   }

  #Parsing out timestamps which are in timestamp field thanks to previous grok section
  date {
    match => [ "timestamp" , "yyyy-MM-dd HH:mm:ss.SSS" ]
  }
}


# Output configuration and filters.

output {
  elasticsearch {
        hosts => ["0.0.0.0:9200"]
  }
  stdout { codec => rubydebug }
}